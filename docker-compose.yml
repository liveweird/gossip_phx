version: '2'
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
    volumes:
    - postgres_data:/var/lib/postgresql
    - postgres_logs:/var/log/postgresql
    ports:
    - "5432:5432"
  phoenix_1:
    image: gossip-run
    external_links:
    - gossip_vol
    volumes_from:
    - container:gossip_vol
    # - logs:/var/log
    depends_on:
    - postgres
    links:
    - postgres
    environment:
      MIX_ENV: "prod"
      RELEASE_CONFIG_FILE: /gossip/_build/prod/rel/gossip_phx_1.conf
    ports:
    - "4000:4000"
    command: gossip/_build/prod/rel/gossip_phx/bin/gossip_phx foreground
  phoenix_2:
    image: gossip-run
    external_links:
    - gossip_vol
    volumes_from:
    - container:gossip_vol
    # - logs:/var/log
    depends_on:
    - postgres
    links:
    - postgres
    environment:
      MIX_ENV: "prod"
      RELEASE_CONFIG_FILE: /gossip/_build/prod/rel/gossip_phx_2.conf
    ports:
    - "4001:4001"
    command: gossip/_build/prod/rel/gossip_phx/bin/gossip_phx foreground
  proxy:
    image: gossip-haproxy
    depends_on:
    - phoenix_1
    - phoenix_2
    links:
    - phoenix_1
    - phoenix_2
    ports:
    - "80:80"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  redis:
    image: redis
    ports:
    - "6379:6379"
    volumes:
    - redis_data:/data
  etcd:
    image: quay.io/coreos/etcd
    ports:
    - "2379:2379"
    - "2380:2380"
    command: etcd -listen-client-urls http://0.0.0.0:2379 --advertise-client-urls http://0.0.0.0:2379
  registrator:
    image: gliderlabs/registrator
    network_mode: host
    depends_on:
    - etcd
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock
    command: etcd://192.168.99.100:2379
volumes:
  postgres_logs:
  postgres_data:
  redis_data:
